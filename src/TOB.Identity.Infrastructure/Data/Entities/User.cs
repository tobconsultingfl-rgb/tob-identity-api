// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace TOB.Identity.Infrastructure.Data.Entities;

public partial class User
{
    public User()
    {
        InverseManager = new HashSet<User>();
        UserRoleMappings = new HashSet<UserRoleMapping>();
    }

    [Key]
    public Guid UserId { get; set; }
    public Guid? ManagerId { get; set; }
    public Guid TenantId { get; set; }
    [Required]
    [StringLength(200)]
    public string FirstName { get; set; }
    [Required]
    [StringLength(200)]
    public string LastName { get; set; }
    [Required]
    [StringLength(200)]
    public string Username { get; set; }
    [Required]
    [StringLength(200)]
    public string Email { get; set; }
    [StringLength(200)]
    public string Address1 { get; set; }
    [StringLength(200)]
    public string Address2 { get; set; }
    [StringLength(200)]
    public string City { get; set; }
    [StringLength(20)]
    public string State { get; set; }
    [StringLength(20)]
    public string Zip { get; set; }
    [StringLength(50)]
    public string Phone { get; set; }
    [StringLength(50)]
    public string MobilePhone { get; set; }
    [StringLength(50)]
    public string Fax { get; set; }
    public Guid? CreatedBy { get; set; }
    public Guid? UpdatedBy { get; set; }
    [Column(TypeName = "datetime")]
    public DateTime? CreatedDateTime { get; set; }
    [Column(TypeName = "datetime")]
    public DateTime? UpdatedDateTime { get; set; }
    public bool? IsActive { get; set; }

    [ForeignKey("TenantId")]
    [InverseProperty("Users")]
    public virtual Tenant Tenant { get; set; }
    [ForeignKey("ManagerId")]
    [InverseProperty("InverseManager")]
    public virtual User Manager { get; set; }
    [InverseProperty("Manager")]
    public virtual ICollection<User> InverseManager { get; set; }
    [InverseProperty("User")]
    public virtual ICollection<UserRoleMapping> UserRoleMappings { get; set; }
}